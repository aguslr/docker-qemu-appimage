ARG BASE_IMAGE=library/ubuntu:jammy

FROM docker.io/${BASE_IMAGE}

ENV QEMU_VER=9.2.2

RUN <<-EOT bash
	set -eu

	apt-get update

	env DEBIAN_FRONTEND=noninteractive \
		apt-get install -y \
		wget imagemagick file build-essential python3-pip

	env DEBIAN_FRONTEND=noninteractive \
		apt-get install -y --no-install-recommends \
		bison flex ninja-build valgrind \
		libcap-ng-dev \
		libepoxy-dev \
		libpixman-1-dev \
		libpmem-dev \
		libpulse-dev \
		libsdl2-dev libsdl2-image-dev \
		libslirp-dev \
		libspice-server-dev \
		libusb-1.0-0-dev libusb-dev libusbredirhost-dev \
		libvncserver-dev \
		-o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold"

	pip install tomli sphinx-rtd-theme

	apt-get clean && rm -rf /var/lib/apt/lists/* /var/lib/apt/lists/*

	wget -c -nv -P / \
		"https://download.qemu.org/qemu-${QEMU_VER}.tar.xz"

	wget -c -nv \
		"https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-$(uname -m).AppImage" \
		-O /usr/local/bin/linuxdeploy.appimage && \
		chmod a+x /usr/local/bin/linuxdeploy.appimage

	mkdir -p /opt/linuxdeploy && cd /opt/linuxdeploy && \
		/usr/local/bin/linuxdeploy.appimage --appimage-extract && \
		rm -f /usr/local/bin/linuxdeploy.appimage
EOT

WORKDIR /src

COPY rootfs/ /

VOLUME /src /input /output

ENTRYPOINT ["/entrypoint.sh"]
